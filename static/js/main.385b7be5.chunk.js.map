{"version":3,"sources":["components/StorageTest.js","components/Home.js","App.js","reportWebVitals.js","index.js"],"names":["randomWords","require","StorageTest","props","componentWillMount","myInterval","setInterval","state","seconds","setState","clearInterval","componentWillUnmount","handleChange","event","value","target","handleSubmit","word","words","includes","validWords","correct","push","alert","preventDefault","seeResults","msg","window","location","reload","playing","bind","className","this","onSubmit","id","type","onChange","onClick","slice","map","Component","Home","game","console","log","renderGame","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.385b7be5.chunk.js","sourcesContent":["import React, { Component }  from 'react';\r\nvar randomWords = require('random-words');\r\n\r\nexport default class StorageTest extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      seconds: 60,\r\n      words: randomWords(30),\r\n      validWords: [],\r\n      value: '',\r\n      playing: true,\r\n      correct: 0\r\n    }\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n componentWillMount = () => {\r\n    this.myInterval = setInterval(() => {\r\n      if (this.state.seconds > 0) this.setState(({seconds}) => ({seconds: seconds - 1}));\r\n      if (this.state.seconds === 0) clearInterval(this.myInterval)\r\n    }, 1000);\r\n  }\r\n\r\n  componentWillUnmount = () => {\r\n    clearInterval(this.myInterval)\r\n  } \r\n\r\n  handleChange = event => {    \r\n    this.setState({value: event.target.value});\r\n  }\r\n\r\n  handleSubmit = event => {\r\n    const word = this.state.value;\r\n    if (this.state.words.includes(word) && !this.state.validWords.includes(word)) {\r\n      this.setState(({correct}) => ({correct: correct+1}));\r\n      this.state.validWords.push(word);\r\n    }\r\n    alert('A word was submitted: ' + this.state.value);\r\n    this.setState({value: ''});\r\n    event.preventDefault();\r\n  }\r\n\r\n  seeResults = () => {\r\n    let msg;\r\n    if (this.state.correct >= 5 && this.state.correct <=9) \r\n      msg = \"Your working memory span is average (5-9 items).\"\r\n    else if (this.state.correct < 5) \r\n      msg = \"Your working memory span is below average. Grouping items into a meaningful whole\" +\r\n            \"could be a good idea.\"\r\n    else msg = \"Your working memory span is very good!\"\r\n    alert(\"You got \" + this.state.correct + \" correct.\\n\" + msg);\r\n    window.location.reload();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"game-background\">\r\n        {this.state.seconds === 0 ?\r\n          <div>\r\n            <form onSubmit={this.handleSubmit} id=\"myform\">\r\n              <p>Enter in as many words as you can remember.</p>\r\n              <p>Press \"See Results\" after you're done.</p>       \r\n              <input type=\"text\" value={this.state.value} onChange={this.handleChange} />                \r\n            </form>\r\n            <div className=\"button-wrapper\">\r\n              <button className=\"game-button\" onClick={() => this.seeResults()}>See Results</button>\r\n              <button className=\"game-button\" onClick={() => window.location.reload()}>Quit</button>\r\n            </div>\r\n          </div>\r\n        : \r\n          <div>\r\n            <h1>Remember as many words as you can!</h1>\r\n            <h1>Time Remaining: {this.state.seconds}</h1>\r\n            <div>\r\n              <div className=\"list\">{this.state.words.slice(0,10).map(word => (<p>{word}</p>))}</div>\r\n              <div className=\"list\">{this.state.words.slice(10,20).map(word => (<p>{word}</p>))}</div>\r\n              <div className=\"list\">{this.state.words.slice(20,30).map(word => (<p>{word}</p>))}</div>\r\n            </div>\r\n          </div>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from \"react\";\r\nimport StorageTest from \"./StorageTest\";\r\n\r\nexport default class Home extends Component {\r\n  state = {\r\n    playing: false,\r\n    game: ''\r\n  }\r\n  renderGame() {\r\n    if (this.state.game === \"storage\") return (<StorageTest/>);\r\n    else if (this.state.game === \"search\") console.log(\"yo\");\r\n  }\r\n  render() {\r\n    return (\r\n      <div> {!this.state.playing ? \r\n        <div className=\"App\" >\r\n          Working Memory Test\r\n          <div className=\"button-wrapper\">\r\n            <button className=\"game-button\" onClick={() => this.setState({playing: true, game: \"storage\"})}> \r\n              Play Storage Test\r\n            </button>\r\n          </div>\r\n          <p className=\"author\">Made by Cheng Bin Chen for COGS2120 S21</p>\r\n        </div>\r\n      : this.renderGame()}</div>\r\n    );\r\n  }\r\n}","import React, { Component } from \"react\";\nimport Home from \"./components/Home\";\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n    <div>\n      <Home/>\n    </div>\n    );\n  }\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}